steps:
# This step creates a new image, adding the Cloud SQL Auth Proxy to allow Cloud Build to connect securely to Cloud SQL
  - id: "docker-layer"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: bash
    args:
      - "-c"
      - "echo \"FROM ${_IMAGE_NAME}\nCOPY --from=gcr.io/cloudsql-docker/gce-proxy /cloud_sql_proxy /cloudsql/cloud_sql_proxy\" > Dockerfile-proxy && docker build -f Dockerfile-proxy -t ${_IMAGE_NAME}-proxy ."

  # This step runs the Django migration commands using the image built in the previous step
  # It starts the Cloud SQL Auth Proxy as a background process, then runs the Django commands.

  - id: "migrate"
  
    name: "${_IMAGE_NAME}-proxy"
    env: 
      - USE_CLOUD_SQL_AUTH_PROXY=true
    secretEnv:
      - APPLICATION_SETTINGS
    entrypoint: launcher
    args: 
      - "bash"
      - "-c"
      - "(/cloudsql/cloud_sql_proxy -instances=${_INSTANCE_CONNECTION_NAME}=tcp:5432 & sleep 2) && python3 manage.py migrate && python3 manage.py collectstatic --noinput"

substitutions:
  _INSTANCE_CONNECTION_NAME: "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}"
  _IMAGE_NAME: "${_REGION}-docker.pkg.dev/${PROJECT_ID}/my-full-image/myfullimage"
  _REGION: us-central1
  _INSTANCE_NAME: cloudsqlfordj

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/application_settings/versions/latest
      env: APPLICATION_SETTINGS

options:
  dynamicSubstitutions: true