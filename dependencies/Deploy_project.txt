cd [GCLOUD FOLDER]
(echo 1 && echo 1 && echo 1 && echo n)|CALL GoogleCloud/google-cloud-sdk/bin/gcloud init
cd "/dependencies"

:Set environment variables from variables.txt
set /A suf=%RANDOM%*%RANDOM%
for /f "delims== tokens=1,2" %%G in (variables.txt) do (IF %%G==PROJECT_ID (set %%G=%%H-%suf%) ELSE (set %%G=%%H))

:Create Project and enable billing
call gcloud projects create %PROJECT_ID% --name=%NAME% --set-as-default && ^
call gcloud beta billing projects link %PROJECT_ID% --billing-account %BILLING_ACCOUNT% && ^
echo %PROJECT_ID% created

call gcloud config get-value core/project>tmp.txt && ^
set /p PROJECT_ID=<tmp.txt
del tmp.txt

:Enable APIs
echo Enable APIs
call gcloud services enable run.googleapis.com sql-component.googleapis.com sqladmin.googleapis.com compute.googleapis.com cloudbuild.googleapis.com secretmanager.googleapis.com artifactregistry.googleapis.com vpcaccess.googleapis.com servicenetworking.googleapis.com billingbudgets.googleapis.com && ^
echo APIs enabled

:Create Service account
call gcloud iam service-accounts create cloudrun-serviceaccount && ^
echo service account %SERVICE_ACCOUNT% created && ^
call gcloud iam service-accounts list --filter cloudrun-serviceaccount --format "value(email)">tmp.txt && ^
set /p SERVICE_ACCOUNT=<tmp.txt
del tmp.txt

:Create VPN Connection Host (NEEDED FOR SQL SERVER)
call gcloud compute addresses create internal-connection --global --purpose=VPC_PEERING --addresses=192.168.0.0 --prefix-length=16 --description="Stocks Website Allocate IP range" --network=default && ^
call gcloud services vpc-peerings connect --service=servicenetworking.googleapis.com --ranges=internal-connection --network=default && ^
call gcloud compute networks vpc-access connectors create %VPC-CONNECTOR-NAME% --network default --region %REGION% --range 10.8.0.0/28
echo Private VPN connection created


:Create bucket
set GS_BUCKET_NAME=%PROJECT_ID%-media
call gsutil mb -l %REGION% gs://%GS_BUCKET_NAME% && ^
echo Bucket created

:Create Sql Server database
call gcloud sql instances create %INSTANCE_NAME% --project %PROJECT_ID% --database-version SQLSERVER_2019_STANDARD --cpu 2 --memory 8 --region %REGION% --network=projects/%PROJECT_ID%/global/networks/default --assign-ip --root-password=%DJPASSWORD% && ^
call gcloud sql databases create Stocks_Website_db --instance=%INSTANCE_NAME% && ^
echo instance and database in  %PROJECT_ID%:%REGION%:%INSTANCE_NAME% Stocks_Website_db  && ^
call gcloud sql instances list --filter=name:%INSTANCE_NAME% --format="value(PRIVATE_ADDRESS)">tmp.txt && ^
set /p HOST=<tmp.txt && ^
set DBUSER=sqlserver 
del tmp.txt


: Give your service account cloud sql access
call gcloud projects add-iam-policy-binding %PROJECT_ID% --member serviceAccount:%SERVICE_ACCOUNT% --role roles/cloudsql.client

: Save environment variables 
echo HOST="%HOST%"> .env
echo INSTANCE_NAME="%INSTANCE_NAME%">> .env
echo DBUSER=%DBUSER%>> .env
echo DJPASSWORD=%DJPASSWORD%>> .env
echo PROJECT_ID="%PROJECT_ID%">> .env
echo GS_BUCKET_NAME=%GS_BUCKET_NAME%>> .env
echo REGION="%REGION%">>.env
echo DBUG="%DBUG%">>.env
echo BIG_QUERY_LOCATION="/secret/Bigquery_key">>.env

:Create a secret
call gcloud secrets create application_settings --data-file .env
call gcloud secrets create Bigquery_key --data-file %BIG_QUERY_KEY_LOCATION% && ^
echo Secrets created
del .env

:Create a cloud build account 
call gcloud projects describe %PROJECT_ID% --format value(projectNumber)>>tmp.txt && ^
set /p PROJECTNUM=<tmp.txt
del tmp.txt
set CLOUDBUILD=%PROJECTNUM%@cloudbuild.gserviceaccount.com && ^
set CLOUDBUILD && ^
call gcloud secrets add-iam-policy-binding application_settings --member serviceAccount:%SERVICE_ACCOUNT% --role roles/secretmanager.secretAccessor && ^
call gcloud secrets add-iam-policy-binding Bigquery_key --member serviceAccount:%SERVICE_ACCOUNT% --role roles/secretmanager.secretAccessor && ^
call gcloud secrets add-iam-policy-binding application_settings --member serviceAccount:%CLOUDBUILD% --role roles/secretmanager.secretAccessor && ^
call gcloud secrets add-iam-policy-binding Bigquery_key --member serviceAccount:%CLOUDBUILD% --role roles/secretmanager.secretAccessor && ^
call gcloud projects add-iam-policy-binding %PROJECT_ID% --member serviceAccount:%CLOUDBUILD% --role roles/cloudsql.client && ^
echo Iam Policy updated for %CLOUDBUILD%

:Create docker image
cd %DJ-FOLDER%
echo FROM gcr.io/%PROJECT_ID%/myimage:latest > tmp | type docker_template\Dockerfile_temp >> tmp | (Echo YES|move tmp Dockerfile)
call gcloud builds submit --pack image=gcr.io/%PROJECT_ID%/myimage && ^
echo Image created
call gcloud artifacts repositories create "my-full-image" --repository-format=Docker --location=us-central1 --description="Web Stocks Docker repository" && ^
call gcloud builds submit --tag us-central1-docker.pkg.dev/%PROJECT_ID%/my-full-image/myfullimage && ^
echo Full Image created

:Submit migrations
call gcloud builds submit --config migrate.yaml && ^
echo Migrations applied

:Deploy
set BIG_QUERY_LOCATION=/secret/Bigquery_key
call gcloud run deploy stocks-website --platform managed --region %REGION% --image %REGION%-docker.pkg.dev/%PROJECT_ID%/my-full-image/myfullimage:latest  --set-cloudsql-instances %PROJECT_ID%:%REGION%:%INSTANCE_NAME% --set-secrets APPLICATION_SETTINGS=application_settings:latest --set-secrets %BIG_QUERY_LOCATION%=Bigquery_key:latest --service-account %SERVICE_ACCOUNT% --allow-unauthenticated --vpc-connector %VPC-CONNECTOR-NAME% && ^
echo fist deployment ready 

:Add Host to Trusted Hosts
call gcloud run services describe stocks-website --platform managed --region %REGION% --format value(status.url)>>tmp.txt
set /p CLOUDRUN_SERVICE_URL=<tmp.txt
del tmp.txt
call gcloud secrets versions access latest --secret application_settings > temp_settings
echo CLOUDRUN_SERVICE_URL=%CLOUDRUN_SERVICE_URL%>>temp_settings
call gcloud secrets versions add application_settings --data-file temp_settings
del temp_settings
call gcloud run services update stocks-website --platform managed --region %REGION% --image %REGION%-docker.pkg.dev/%PROJECT_ID%/my-full-image/myfullimage:latest && ^
echo finished

PAUSE 